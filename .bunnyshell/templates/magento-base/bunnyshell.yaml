kind: Environment
name: 'Meet Magento 23'
type: primary
urlHandle: magento
environmentVariables:
  MAGE_ADMIN_EMAIL: sorin.dumitrescu@bunnyshell.com
  MAGE_ADMIN_FIRSTNAME: Magento
  MAGE_ADMIN_LASTNAME: Bunnyshell
  MAGE_ADMIN_PASSWORD: bunnysh3ll
  MAGE_ADMIN_USER: bunnyshell
  MAGE_BACKEND_FRONTNAME: bns
  MAGE_BASE_URL: 'http://{{components.magento.ingress.hosts[0]}}'
  MAGE_BASE_URL_SECURE: 'https://{{components.magento.ingress.hosts[0]}}'
  MAGE_CURRENCY: RON
  MAGE_DB_HOST: db
  MAGE_DB_NAME: '{{components.db.vars.MYSQL_DATABASE}}'
  MAGE_DB_PASSWORD: '{{components.db.vars.MYSQL_PASSWORD}}'
  MAGE_DB_PREFIX: ''
  MAGE_DB_USER: '{{components.db.vars.MYSQL_USER}}'
  MAGE_ELASTICSEARCH_ENABLE_AUTH: '0'
  MAGE_ELASTICSEARCH_HOST: elasticsearch
  MAGE_ELASTICSEARCH_PORT: '9200'
  MAGE_INIT_PARAMS: MAGE_MODE=developer
  MAGE_KEY: abcdefghijklmnopqrstuvwxyzABCDEF
  MAGE_LANGUAGE: en_US
  MAGE_SEARCH_ENGINE: elasticsearch7
  MAGE_TIMEZONE: Europe/Bucharest
  MAGE_USE_REWRITES: '1'
  MAGE_USE_SECURE: '1'
  MAGE_USE_SECURE_ADMIN: '1'
components:
  -
    kind: InitContainer
    name: build
    dockerCompose:
      environment:
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
      image: 'magento/magento-cloud-docker-php:8.1-cli-1.3.2'
      command:
        - bash
        - '-c'
        - |
          set -e
          composer global config http-basic.repo.magento.com "$$MAGE_PUBKEY" "$$MAGE_PRIVKEY"
          composer install --prefer-dist --optimize-autoloader --no-interaction
          bin/magento module:enable --all
          bin/magento setup:install \
              $${MAGE_ADMIN_FIRSTNAME:+--admin-firstname "$$MAGE_ADMIN_FIRSTNAME"} \
              $${MAGE_ADMIN_LASTNAME:+--admin-lastname "$$MAGE_ADMIN_LASTNAME"} \
              $${MAGE_ADMIN_EMAIL:+--admin-email "$$MAGE_ADMIN_EMAIL"} \
              $${MAGE_ADMIN_USER:+--admin-user "$$MAGE_ADMIN_USER"} \
              $${MAGE_ADMIN_PASSWORD:+--admin-password "$$MAGE_ADMIN_PASSWORD"} \
              $${MAGE_BASE_URL:+--base-url "$$MAGE_BASE_URL"} \
              $${MAGE_BACKEND_FRONTNAME:+--backend-frontname "$$MAGE_BACKEND_FRONTNAME"} \
              $${MAGE_DB_HOST:+--db-host "$$MAGE_DB_HOST"} \
              $${MAGE_DB_NAME:+--db-name "$$MAGE_DB_NAME"} \
              $${MAGE_DB_USER:+--db-user "$$MAGE_DB_USER"} \
              $${MAGE_DB_PASSWORD:+--db-password "$$MAGE_DB_PASSWORD"} \
              $${MAGE_DB_PREFIX:+--db-prefix "$$MAGE_DB_PREFIX"} \
              $${MAGE_DB_SSL_KEY:+--db-ssl-key "$$MAGE_DB_SSL_KEY"} \
              $${MAGE_DB_SSL_CERT:+--db-ssl-cert "$$MAGE_DB_SSL_CERT"} \
              $${MAGE_DB_SSL_CA:+--db-ssl-ca "$$MAGE_DB_SSL_CA"} \
              $${MAGE_LANGUAGE:+--language "$$MAGE_LANGUAGE"} \
              $${MAGE_CURRENCY:+--currency "$$MAGE_CURRENCY"} \
              $${MAGE_TIMEZONE:+--timezone "$$MAGE_TIMEZONE"} \
              $${MAGE_USE_REWRITES:+--use-rewrites "$$MAGE_USE_REWRITES"} \
              $${MAGE_USE_SECURE:+--use-secure "$$MAGE_USE_SECURE"} \
              $${MAGE_BASE_URL_SECURE:+--base-url-secure "$$MAGE_BASE_URL_SECURE"} \
              $${MAGE_USE_SECURE_ADMIN:+--use-secure-admin "$$MAGE_USE_SECURE_ADMIN"} \
              $${MAGE_ADMIN_USE_SECURITY_KEY:+--admin-use-security-key "$$MAGE_ADMIN_USE_SECURITY_KEY"} \
              $${MAGE_SESSION_SAVE:+--session-save "$$MAGE_SESSION_SAVE"} \
              $${MAGE_KEY:+--key "$$MAGE_KEY"} \
              $${MAGE_CLEANUP_DATABASE:+--cleanup-database "$$MAGE_CLEANUP_DATABASE"} \
              $${MAGE_DB_INIT_STATEMENTS:+--db-init-statements "$$MAGE_DB_INIT_STATEMENTS"} \
              $${MAGE_SALES_ORDER_INCREMENT_PREFIX:+--sales-order-increment-prefix "$$MAGE_SALES_ORDER_INCREMENT_PREFIX"} \
              $${MAGE_SEARCH_ENGINE:+--search-engine "$$MAGE_SEARCH_ENGINE"} \
              $${MAGE_ELASTICSEARCH_HOST:+--elasticsearch-host "$$MAGE_ELASTICSEARCH_HOST"} \
              $${MAGE_ELASTICSEARCH_PORT:+--elasticsearch-port "$$MAGE_ELASTICSEARCH_PORT"} \
              $${MAGE_ELASTICSEARCH_INDEX_PREFIX:+--elasticsearch-index-prefix "$$MAGE_ELASTICSEARCH_INDEX_PREFIX"} \
              $${MAGE_ELASTICSEARCH_TIMEOUT:+--elasticsearch-timeout "$$MAGE_ELASTICSEARCH_TIMEOUT"} \
              $${MAGE_ELASTICSEARCH_ENABLE_AUTH:+--elasticsearch-enable-auth "$$MAGE_ELASTICSEARCH_ENABLE_AUTH"} \
              $${MAGE_ELASTICSEARCH_USERNAME:+--elasticsearch-username "$$MAGE_ELASTICSEARCH_USERNAME"} \
              $${MAGE_ELASTICSEARCH_PASSWORD:+--elasticsearch-password "$$MAGE_ELASTICSEARCH_PASSWORD"} \
              $${MAGE_AMQP_HOST:+--amqp-host "$$MAGE_AMQP_HOST"} \
              $${MAGE_AMQP_PORT:+--amqp-port "$$MAGE_AMQP_PORT"} \
              $${MAGE_AMQP_USER:+--amqp-user "$$MAGE_AMQP_USER"} \
              $${MAGE_AMQP_PASSWORD:+--amqp-password "$$MAGE_AMQP_PASSWORD"} \
              $${MAGE_AMQP_VIRTUALHOST:+--amqp-virtualhost "$$MAGE_AMQP_VIRTUALHOST"} \
              $${MAGE_AMQP_SSL:+--amqp-ssl "$$MAGE_AMQP_SSL"} \
              $${MAGE_CONSUMERS_WAIT_FOR_MESSAGES:+--consumers-wait-for-messages "$$MAGE_CONSUMERS_WAIT_FOR_MESSAGES"} \
              $${MAGE_LOCK_PROVIDER:+--lock-provider "$$MAGE_LOCK_PROVIDER"} \
              $${MAGE_LOCK_DB_PREFIX:+--lock-db-prefix "$$MAGE_LOCK_DB_PREFIX"} \
              $${MAGE_LOCK_ZOOKEEPER_HOST:+--lock-zookeeper-host "$$MAGE_LOCK_ZOOKEEPER_HOST"} \
              $${MAGE_LOCK_ZOOKEEPER_PATH:+--lock-zookeeper-path "$$MAGE_LOCK_ZOOKEEPER_PATH"} \
              $${MAGE_LOCK_FILE_PATH:+--lock-file-path "$$MAGE_LOCK_FILE_PATH"} \
              $${MAGE_CONSUMERS_WAIT_FOR_MESSAGES:+--consumers-wait-for-messages "$$MAGE_CONSUMERS_WAIT_FOR_MESSAGES"} \
              $${MAGE_INIT_PARAMS:+--magento-init-params "$$MAGE_INIT_PARAMS"}
          bin/magento setup:di:compile
          bin/magento setup:static-content:deploy -f
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: InitContainer
    name: deploy
    dockerCompose:
      environment:
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
      hostname: deploy.magento2.docker
      image: 'magento/magento-cloud-docker-php:8.1-cli-1.3.2'
      command:
        - bash
        - '-c'
        - |
          bin/magento setup:upgrade --keep-generated
          bin/magento cache:flush
          bin/magento indexer:reindex
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: SidecarContainer
    name: web
    dockerCompose:
      environment:
        FPM_HOST: magento
        FPM_PORT: '9000'
        HTTPS_METHOD: noredirect
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
        UPSTREAM_HOST: 127.0.0.1
        VIRTUAL_HOST: 'magento-{{ env.base_domain }}'
        VIRTUAL_PORT: '80'
        WITH_XDEBUG: '0'
      image: 'magento/magento-cloud-docker-nginx:1.19-1.3.2'
      entrypoint: /bin/bash
      command:
        - '-c'
        - |
          sed -i "s/proxy_set_header X-Forwarded-Proto \$$scheme;/proxy_set_header X-Forwarded-Proto https;/" /etc/nginx/conf.d/default.conf
          /docker-entrypoint.sh nginx -g "daemon off;"
      ports:
        - '80:80'
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: Application
    name: magento
    gitRepo: 'https://github.com/sorinbunnyshell/magento.git'
    gitBranch: main
    gitApplicationPath: /
    dockerCompose:
      build:
        context: .
        dockerfile: ./.docker/php/Dockerfile
      environment:
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
      ports:
        - '9000:9000'
        - '80:80'
    pod:
      init_containers:
        -
          from: build
          name: magento-build
          shared_paths:
            -
              path: /app
              target:
                path: /app
                container: '@parent'
              initial_contents: '@target'
        -
          from: deploy
          name: magento-deploy
          shared_paths:
            -
              path: /app
              target:
                path: /app
                container: '@parent'
              initial_contents: '@target'
      sidecar_containers:
        -
          from: web
          name: magento-web
          shared_paths:
            -
              path: /app
              target:
                path: /app
                container: '@parent'
              initial_contents: '@target'
    hosts:
      -
        hostname: 'shop-{{ env.base_domain }}'
        path: /
        servicePort: 80
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: Database
    name: db
    dockerCompose:
      environment:
        MYSQL_DATABASE: magento2
        MYSQL_PASSWORD: magento2
        MYSQL_ROOT_PASSWORD: magento2
        MYSQL_USER: magento2
      image: 'mysql:8'
      ports:
        - '3306:3306'
    volumes:
      -
        name: mysql-data
        mount: /var/lib/mysql
        subPath: ''
  -
    kind: Service
    name: elasticsearch
    dockerCompose:
      environment:
        cluster.name: es-docker
        node.name: node1
      image: 'magento/magento-cloud-docker-elasticsearch:7.11-1.3.2'
      ports:
        - '9200:9200'
    volumes:
      -
        name: elasticsearch-data
        mount: /usr/share/elasticsearch/data
        subPath: ''
  -
    kind: Service
    name: redis
    dockerCompose:
      image: 'redis:6.2'
      ports:
        - '6379:6379'
    volumes:
      -
        name: redis-data
        mount: /data
        subPath: ''
  -
    kind: Service
    name: varnish
    dockerCompose:
      image: 'magento/magento-cloud-docker-varnish:latest-1.2'
      entrypoint: /bin/sh
      command: '-c "tail -f /dev/null"'
    volumes:
      -
        name: varnish-data
        mount: /var/lib/varnish
        subPath: ''
  -
    kind: Service
    name: mailhog
    dockerCompose:
      image: 'mailhog/mailhog:latest'
      ports:
        - '1025:1025'
        - '8025:8025'
    hosts:
      -
        hostname: 'mailhog-{{ env.base_domain }}'
        path: /
        servicePort: 8025
    volumes:
      -
        name: mailhog-data
        mount: /data/mailhog
        subPath: ''
volumes:
  -
    name: elasticsearch-data
    size: 1Gi
    type: disk
  -
    name: mysql-data
    size: 1Gi
    type: disk
  -
    name: redis-data
    size: 1Gi
    type: disk
  -
    name: varnish-data
    size: 1Gi
    type: disk
  -
    name: mailhog-data
    size: 1Gi
    type: disk
  -
    name: public-media
    size: 2Gi
    type: network
  -
    name: public-static
    size: 1Gi
    type: network
